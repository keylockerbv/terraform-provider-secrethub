version: 2.1
orbs:
  secrethub: secrethub/cli@1.0.0
jobs:
  lint:
    docker:
      - image: golangci/golangci-lint:v1.27.0-alpine
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-modules-{{ checksum "go.mod" }}
      - run: go mod download
      - save_cache:
          key: go-modules-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
      - restore_cache:
          keys:
            - golangci-lint-{{ .Branch }}
            - golangci-lint-develop
      - run: golangci-lint run
      - save_cache:
          key: golangci-lint-{{ .Branch }}
          paths:
            - ~/.cache/golangci-lint
            - ~/.cache/go-build
  build:
    docker:
      - image: circleci/golang:1.13
    steps:
      - secrethub/install
      - checkout
      - restore_cache:
          keys:
            - go-modules-{{ checksum "go.mod" }}
      - run: go mod download
      - save_cache:
          key: go-modules-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
      - run:
          name: Load GCP credentials
          command: secrethub read -o $GOOGLE_APPLICATION_CREDENTIALS secrethub/terraform-provider/testacc/gcp/credentials.json
      - secrethub/exec:
          step-name: Run acceptance tests
          command: |
            SECRETHUB_CREDENTIAL=$TF_ACC_SECRETHUB_CREDENTIAL
            make testacc
    environment:
      GOPROXY: "https://proxy.golang.org"
      
      # SecretHub credential to use in the acceptance tests
      TF_ACC_SECRETHUB_CREDENTIAL: secrethub://secrethub/terraform-provider/testacc/secrethub/credential
      
      # AWS credentials to use in the acceptance tests
      AWS_ACCESS_KEY_ID: secrethub://secrethub/terraform-provider/testacc/aws/access_key_id
      AWS_SECRET_ACCESS_KEY: secrethub://secrethub/terraform-provider/testacc/aws/secret_access_key

      # Location of the Google credentials file to use in the acceptance tests
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json
workflows:
  version: 2
  pipeline:
    jobs:
      - lint
      - build
